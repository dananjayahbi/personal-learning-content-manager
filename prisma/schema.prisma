// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model LearningProject {
  id          String    @id @default(cuid())
  title       String
  description String?
  status      String    @default("active") // active, completed, paused
  publishStatus String  @default("draft") // draft, published
  priority    String    @default("medium") // high, medium, low
  category    String?   // e.g., "Programming", "Design", "Language"
  progress    Int       @default(0) // 0-100 percentage
  estimatedHours Int?
  actualHours    Int     @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  sections    Section[]
  notes       Note[]
  resources   Resource[]
}

model Section {
  id           String          @id @default(cuid())
  title        String
  content      String?
  order        Int
  projectId    String
  status       String          @default("not-started") // not-started, in-progress, completed
  estimatedHours Int?
  actualHours    Int           @default(0)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  project      LearningProject @relation(fields: [projectId], references: [id], onDelete: Cascade)
  notes        Note[]
  
  @@index([projectId])
}

model Note {
  id          String          @id @default(cuid())
  title       String?
  content     String
  type        String          @default("general") // general, important, question, idea
  projectId   String?
  sectionId   String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  project     LearningProject? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  section     Section?        @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  
  @@index([projectId])
  @@index([sectionId])
}

model Resource {
  id          String          @id @default(cuid())
  title       String
  url         String?
  type        String          @default("link") // link, book, video, course, article
  description String?
  projectId   String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  project     LearningProject @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@index([projectId])
}